@import "@brandup/ui-kit/source/adaptive.less";

.ui-dropdown {
	position: relative;
	box-sizing: border-box;
	user-select: none;

	& svg {
		--svg-size: 18px;
		--svg-fill: var(--input-color);
	}
  
	& .view {
		display: flex;
		width: var(--input-width);
		height: var(--input-height);
		flex-flow: row nowrap;
		align-items: center;
		justify-content: flex-start;
		box-sizing: border-box;
		color: var(--input-color);
		white-space: nowrap;
		border-radius: var(--input-border-radius);
		padding: 10px var(--input-padding-lr);
		background-color: var(--input-fill);
		transition: background-color ease 100ms;
		gap: 10px;
		line-height: var(--line-height);
		text-decoration: none !important;
		outline: none;
		border: none;
		cursor: pointer;
		width: 100%;
		text-align: left;

		&:before {
			content: '';
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
			border-radius: var(--input-border-radius);
			box-sizing: border-box;
			transition: border-color ease 100ms;
	  	}
  
	  	& span {
			flex: 1 1 auto;
			display: block;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
	  	}
  
	  	& svg {
			transition: fill ease 100ms, transform ease 150ms;
	  	}
  
	  	&:hover {
			--input-color: var(--hover--input-color);
			--input-fill: var(--hover--input-fill);
			--input-border-color: var(--hover--input-border-color);
	  	}
  
	  	&:focus {
			--input-color: var(--focus--input-color);
			--input-fill: var(--focus--input-fill);
			--input-border-color: var(--focus--input-border-color);
	  	}
	}
  
	& .popup {
		z-index: 1000;
	  	display: none;
	  	position: absolute;
	  	top: 100%;
	  	width: 100%;
	  	transform: translateY(8px);
	  	font-weight: 400;
	  	outline: none;
	  	min-width: 200px;
  
	  	& .content {
			display: flex;
			flex-flow: column nowrap;
			gap: 16px;
			background: var(--input-fill);
			box-shadow: 0px 1px 8px 0px rgba(0, 0, 0, 0.12);
			border-radius: var(--input-border-radius);
			padding: 16px;
			box-sizing: border-box;
			max-height: 370px;
  
		  	& .header {
				padding: 0;
				display: flex;
				flex-flow: row nowrap;
				align-items: center;
			
				& h3 {
					color: var(--input-color);
			  		flex: 1 1 auto;
				}
			
				& button {
			  		display: flex;
			  		align-items: center;
			  		justify-content: center;
			  		background: none;
			  		border: none;
			  		cursor: pointer;
				
			  		&:after {
						content: '';
						display: block;
						position: absolute;
						left: -10px;
						top: -10px;
						right: -10px;
						bottom: -10px;
			  		}
				}
		  	}
		
		  	& ul {
				flex: 1 1 100%;
				height: 100%;
				position: relative;
				overflow-y: scroll;
				list-style: none;
				padding: 0;
				margin: 0 0 0 -5px;
				padding-right: 5px;
				scrollbar-width: 6px;
			
				&::-webkit-scrollbar {
				  	width: 6px;
				  	height: 5px;
				  	background: none;
				}
			
				&::-webkit-scrollbar-track {
				  	border-radius: 3px;
				  	background-color: transparent;
				}
			
				&::-webkit-scrollbar-thumb {
				  	background-color: #8696a0;
				  	border-radius: 3px;
				}
			
				& li {
					padding: var(--input-padding-lr);
			  		display: flex;
					justify-content: space-between;
					align-items: center;
					color: var(--input-color);
					background: var(--input-fill);
					border-radius: var(--input-border-radius);
					min-height: unset;
					cursor: pointer;
				
					& svg {
						display: none;
					}
				
					&:hover {
						--input-color: var(--hover--input-color);
						--input-fill: var(--hover--input-fill);
					}
				
					&:focus {
						--input-color: var(--focus--input-color);
						--input-fill: var(--focus--input-fill);
					}
				
					&.hasvalue {
						--input-color: var(--hasvalue--input-color);
						--input-fill: var(--hasvalue--input-fill);
						
						& svg {
							display: block;
						
						  	--svg-fill: var(--hasvalue--input-color);
					  	}
					
						&:focus {
						  --input-color: var(--focus--input-color);
						  --input-fill: var(--focus--input-fill);
						}
					}
				}
			
				&.result {
					& li {
						display: none;
					
						&.ok {
				  			display: flex;
						}
			  		}
				}
			
				&.notfound {
			  		display: none;
				
			  		& ~ .empty {
						flex: 1 1 auto;
						display: block;
			  		}
				}
		  	}
		
		  	& .empty {
				color: var(--input-color);
				display: none;
				font-weight: 400;
		  	}
		
		  	& .cancel {
				display: none;
		  	}
		
		  	&.top {
				top: auto;
				bottom: 100%;
				transform: translateY(-8px);
		  	}
		
		  	&.right {
				left: 0;
				right: auto;
		  	}
		}
	}
  
	& .search {
	  	flex: 0 0 auto;
	  	display: none;
	  	flex-flow: row nowrap;
	  	position: relative;
  
	  	& svg {
			--svg-size: 22px;

			display: block;
			position: absolute;
			left: var(--input-padding-lr);
			top: 50%;
			transform: translateY(-50%);
	  	}
  
	  	& input {
			--input-font-size: 16px;
			--input-font-weight: 400;
			--input-width: 100%;
			
			display: block;
			box-sizing: border-box;
			padding: 0 var(--input-padding-lr) 0 calc(var(--input-padding-lr) * 2 + 10px);
			width: var(--input-width);
			height: var(--input-height);
			background: none;
			border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
			border-radius: var(--input-border-radius);
			outline: none;
  
			&:hover,
			&:focus {
				--input-border-color: var(--hover--input-border-color);
				--input-color: var(--hover--input-color);
			}
	  	}
	}

	&.searchable {
	  	& .search {
			display: flex;
	  	}
	}

	&.hasvalue {
		--input-color: var(--hasvalue--input-color);
		--input-fill: var(--hasvalue--input-fill);
		--svg-fill: var(--hasvalue--input-color);

		& .view {
		  	&:hover,
		  	&:focus {
				--input-color: var(--hover--input-color);
				--input-fill: var(--hover--input-fill);
				--svg-fill: var(--hover--input-color);
		  	}
		}
	}

	&.expanded {
		--input-color: var(--expanded--input-color);
		--input-fill: var(--expanded--input-fill);
		--svg-fill: var(--expanded--input-color);

		& .view {
	  		& svg {
				transform: rotate(180deg);
	  		}
		}

		& .popup {
			display: block;
		}
	}
  
	&.invalid {
		--input-color: var(--invalid--input-color);
		--input-fill: var(--invalid--input-fill);
		--input-border-color: var(--invalid--input-border-color);
		--svg-fill: var(--invalid--input-color);
	}
  
	&.disabled {
		--input-color: var(--disabled--input-color);
		--input-fill: var(--disabled--input-fill);
		--svg-fill: var(--disabled--input-color);
		--input-border-color: var(--disabled--input-border-color);

	  	& .view {
			cursor: default;
  
			&:focus,
			&:hover {
		  		--input-color: var(--disabled--input-color);
		  		--input-fill: var(--disabled--input-fill);
		  		--input-border-color: var(--disabled--input-border-color);
			}
	  	}
	}

	.adaptive-notebook({
		& .popup .content {
			max-height: 340px;
		}
	});
	
	.adaptive-notebook-small({
		& .popup .content {
			max-height: 320px;
		}
	});
	
	.adaptive-tablet({
		& .popup {
			position: fixed;
			background: rgba(0, 0, 0, 0.5);
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			transform: none;

			& .content {
				padding: 32px;
				max-width: 540px;
				max-height: 550px;
				width: 100%;
				height: 100%;
			}

			& .header {
				display: flex;
			}

			&.top {
				top: 0;
				bottom: 0;
				transform: none;
			}

			&.right {
				left: 0;
				right: 0;
			}
		}

		&.expanded {
			& .popup {
				display: flex;
				align-items: center;
				justify-content: center;

				& .content {
					flex: 1 1 auto;
				}
			}
		}
	
		& body.ui-dropdown-opened {
			overflow: hidden;
		}
	});
	
	.adaptive-mobile({
		& .popup {
			& .content {
				padding: 28px;
				max-width: none;
				max-height: none;
			}

			& .cancel {
				display: block;
			}
		}
	});
	
	.adaptive-mobile-small({
		& .popup {
			& .content {
				padding: 20px;
			}
		}
	});
}
  
.ui-dropdown-input {
	opacity: 0;
	position: absolute;
	width: 1px;
	height: 1px;
	outline: none;
	visibility: collapse;
}

.ui-dropdown-miniature {
	border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
	background: #F6F7F8;
	border-radius: var(--input-border-radius);
	height: var(--input-height);
	box-sizing: border-box;
}