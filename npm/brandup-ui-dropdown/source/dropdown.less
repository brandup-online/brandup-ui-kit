.ui-dropdown {
	min-height: var(--input-height);
	position: relative;
	box-sizing: border-box;
	color: var(--input-color);
	background: var(--input-fill);
	display: flex;
	user-select: none;

	& > ul {
		flex: 1 1 auto;
	}

	& a {
		flex: 1 1 auto;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		justify-content: flex-start;
		box-sizing: border-box;
		color: var(--input-color);
		white-space: nowrap;
		border-radius: var(--input-border-radius);
		padding: 10px var(--input-padding-lr);
		background: var(--input-fill);
		transition: background ease 100ms;
		gap: 10px;
		line-height: 22px;
		text-decoration: none !important;
		outline: none;

		& span {
			flex: 1 1 auto;
			display: block;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}

		& svg {
			display: none;
			width: 18px;
			height: 18px;
			fill: var(--input-color);
			transition: fill ease 100ms, transform ease 150ms;
		}

		&:hover {
			--input-color: var(--hover--input-color);
			--input-fill: var(--hover--input-fill);

			text-decoration: none;
		}

		&:focus {
			--input-color: var(--focus--input-color);
			--input-fill: var(--focus--input-fill);

			text-decoration: none;
		}
	}

	& ul {
		list-style: none;
		padding: 0;
		margin: 0;
		display: flex;
		flex-flow: row wrap;
		align-items: stretch;
		gap: 1px 5px;

		& li {
			padding: 0;
			margin: 0;
			display: flex;

			&.other {
				flex: 1 1 auto;
				position: relative;

				& > a {
					position: relative;
					padding-right: 11px;

					&:before {
						display: none;
						content: '';
						position: absolute;
						left: 0;
						top: 0;
						width: 100%;
						height: 100%;
						border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
						border-radius: var(--input-border-radius);
						box-sizing: border-box;
						transition: border-color ease 100ms;
					}

					& svg {
						display: block;
					}
				}
			}

			&.has-value {
				& > a {
					// общие стили, если элемент выбран
					--input-color: var(--has-value--input-color);
					--input-fill: var(--has-value--input-fill);

					& svg {
						fill: var(--has-value--input-color);
					}

					&:hover,
					&:focus {
						--input-color: var(--hover--input-color);
						--input-fill: var(--hover--input-fill);
						
						& svg {
							fill: var(--hover--input-color);
						}
					}
				}
			}
		}
	}

	& .popup {
		display: none;
		position: absolute;
		top: 100%;
		width: 100%;
		transform: translateY(8px);
		font-weight: 400;
		z-index: 1000;
		outline: none;
		min-width: 200px;

		& .content {
			display: flex;
			flex-flow: column nowrap;
			gap: 16px;
			background: var(--input-fill);
			box-shadow: 0px 1px 8px 0px rgba(0, 0, 0, 0.12);
			border-radius: var(--input-border-radius);
			padding: 16px;
			box-sizing: border-box;
			max-height: 370px;
		}

		& .header {
			padding: 0;
			display: none;
			flex-flow: row nowrap;
			align-items: center;

			& h3 {
				flex: 1 1 auto;
			}

			& button {
				display: flex;
				align-items: center;
				justify-content: center;

				&:after {
					// для увеличения области клика
					content: '';
					display: block;
					position: absolute;
					left: -10px;
					top: -10px;
					right: -10px;
					bottom: -10px;
				}

				& svg {
					width: 18px;
					height: 18px;
				}
			}
		}

		& a {
			padding: 12px;
			min-height: unset;
			width: 100%;

			& svg {
				display: none;
			}
		}

		& ul {
			flex: 1 1 100%;
			height: 100%;
			position: relative;
			overflow-y: scroll;
			flex-flow: column nowrap;
			box-sizing: border-box;
			margin-right: -11px;
			padding-right: 5px;
			scrollbar-width: 6px;
			gap: 0;

			&::-webkit-scrollbar {
				width: 6px;
				height: 5px;
				background: none;
			}

			&::-webkit-scrollbar-track {
				border-radius: 3px;
				background-color: transparent;
				cursor: default;
			}

			&::-webkit-scrollbar-thumb {
				background-color: #8696a0;
				border-radius: 3px;
				cursor: default;
			}

			& li {
				&.fasted {
					display: none;

					&.ok {
						display: block;
					}
				}

				&.has-value {
					& > a {
						// стили если выбран элемент внутри popup
						--input-color: var(--has-value--input-color);
						--input-fill: var(--has-value--input-fill);

						& svg {
							display: block;
							fill: var(--has-value--input-color);
						}

						&:focus {
							--input-color: var(--focus--input-color);
							--input-fill: var(--focus--input-fill);
						}
					}
				}
			}

			&.result {
				& li {
					display: none;

					&.ok {
						display: flex;
					}
				}
			}

			&.notfound {
				display: none;

				& ~ .empty {
					flex: 1 1 auto;
					display: block;
				}
			}
		}

		& .empty {
			display: none;
			font-weight: 400;
		}

		& .cancel {
			display: none;
		}

		&.top {
			top: auto;
			bottom: 100%;
			transform: translateY(-8px);
		}

		&.right {
			left: 0;
			right: auto;
		}
	}

	& .search {
		flex: 0 0 auto;
		display: none;
		flex-flow: row nowrap;
		position: relative;

		& svg {
			display: block;
			width: 22px;
			height: 22px;
			fill: var(--input-color);
			position: absolute;
			left: var(--input-padding-lr);
			top: 50%;
			transform: translateY(-50%);
		}

		& input {
			display: block;
			box-sizing: border-box;
			border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
			border-radius: var(--input-border-radius);
			background: none;
			margin: 0;
			padding: 0 var(--input-padding-lr) 0 calc(var(--input-padding-lr) * 2 + 10px);
			height: var(--input-height);
			font-size: 16px;
			font-weight: 400;
			outline: none;
			width: 100%;

			&:hover,
			&:focus {
				color: var( --input-color);
				--input-border-color: var(--hover--input-border-color);
			}
		}
	}

	&.searchable {
		& .search {
			display: flex;
		}
	}

	&.noother {
		& ul li.other {
			display: none;
		}
	}

	&.expanded {
		& ul li.other {
			z-index: 1000;

			& > a {
				--input-color: var(--expanded--input-color);
				--input-fill: var(--expanded--input-fill);

				& svg {
					fill: var(--expanded--input-color);
					transform: rotate(180deg);
				}

				&:before {
					--input--border-color: var(--input-border-color);
				}
			}
		}

		& .popup {
			display: block;
		}
	}

	&.invalid {
		& > ul > li {
			> a {
				--input-color: var(--invalid--input-color);
			}
		}
	}

	&.disabled { // класс для кнопок
		& > ul > li {
			> a {
				--input-color: var(--disabled--input-color);
				--input-border-color: var(--disabled--input-border-color);
				--input-fill: var(--disabled--input-fill);
				
				cursor: default;

				& svg {
					fill: var(--disabled--input-color);
				}

				&:focus,
				&:hover {
					--input-color: var(--disabled--input-color);
					--input-border-color: var(--disabled--input-border-color);
					--input-fill: var(--disabled--input-fill);
				}
			}
		}
	}

	&.empty {
		& .popup {
			right: auto;
			left: 0;

			& ul {
				display: none;
			}

			& .empty {
				display: block;
				flex: 1 1 auto;
			}
		}

		& .search {
			display: none;
		}
	}

	&.fast {
		& ul li.other {
			flex: 0 1 auto;

			& > a {
				&:before {
					display: none;
				}
			}
		}

		& > ul > li > a span {
			max-width: 130px;
		}

		& .popup {
			right: 0;
			width: 288px;
		}
	}

	&.select {
		& > ul > li {
			&.other {
				flex: 1 1 auto;

				& > a {
					&:before {
						display: block;
					}

					&:hover {
						--input-color: var(--hover--input-color);
						--input-fill: var(--hover--input-fill);

						&:before {
							--input-border-color: var(--hover--input-border-color);
						}
					}

					&:focus {
						--input-color: var(--focus--input-color);
						--input-fill: var(--focus--input-fill);

						&:before {
							--input-border-color: var(--focus--input-border-color);
						}
					}
				}
			}

			&.has-value {
				& > a {
					--input-color: var(--has-value--input-color);
					--input-fill: var(--has-value--input-fill);

					& svg {
						fill: var(--has-value--input-color);
					}
				}
			}
		}

		& .popup {
			left: 0;
			right: auto;
		}

		&.expanded {
			& > ul > li {
				&.other {
					& > a {
						--input-color: var(--expanded--input-color);
						--input-fill: var(--expanded--input-fill);

						& svg {
							fill: var(--input-color);
						}

						&:before {
							--input-border-color: var(--focus--input-border-color);
						}
					}
				}
			}
		}

		&.invalid {
			& > ul > li {
				&.other {
					& > a {
						--input-color: var(--invalid--input-color);
						--input-border-color: var(--invalid--input-border-color);

						&:before {
							--input-border-color: var(--invalid--input-border-color);
						}
					}
				}
			}
		}
	}
}

.ui-dropdown-input {
	opacity: 0;
	position: absolute;
	width: 1px;
	height: 1px;
	outline: none;
	visibility: collapse;
}

.ui-dropdown-miniature {
	border: var(--input-border-type) var(--input-border-width) var(--input-border-color);
	background: var(--input-fill);
	border-radius: var(--input-border-radius);
	height: var(--input-height);
	box-sizing: border-box;
}